// Generated by CoffeeScript 1.7.1
(function() {
  var ProgressBar, inspect, pretty, puts, _ref;

  _ref = require('util'), puts = _ref.puts, inspect = _ref.inspect;

  pretty = require('./utils').pretty;

  ProgressBar = require('progressbar').ProgressBar;

  require('colors');


  /*
  Benchmark utility function
  
  TODO add more comments and documentation
   */

  module.exports = function(opts) {
    var msg, predicted, progress, promise, results, solution, stats, test, _i, _len, _ref1;
    if (opts.name == null) {
      opts.name = 'testing';
    }
    if (opts.progress == null) {
      opts.progress = true;
    }
    if (opts.debug == null) {
      opts.debug = false;
    }
    if (opts.onTest == null) {
      opts.onTest = function(solution, predicted) {
        return solution === predicted;
      };
    }
    opts.instance.insert(opts.training);
    if (opts.progress) {
      progress = new ProgressBar();
      progress.step(opts.name).setTotal(opts.testing.length);
    }
    stats = {
      errors: 0,
      tests: 0
    };
    _ref1 = opts.testing;
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      test = _ref1[_i];
      solution = test[opts.compare];
      delete test[opts.compare];
      promise = opts.instance.query({
        select: opts.compare,
        where: test
      });
      results = promise.best();
      predicted = results[opts.compare];
      msg = "solution: " + solution + "\tpredicted: " + predicted;
      if (opts.onTest(solution, predicted)) {
        if (opts.debug) {
          puts(msg.green);
        }
      } else {
        stats.errors++;
        if (opts.debug) {
          puts(msg.yellow);
        }
      }
      stats.tests++;
      if (opts.progress) {
        progress.addTick();
      }
    }
    if (opts.progress) {
      progress.finish();
    }
    if (typeof opts.onComplete === "function") {
      opts.onComplete(stats);
    }
    return stats;
  };

}).call(this);
